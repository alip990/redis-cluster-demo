version: '3.8'

services:
  redis_1:
    image: "docker.arvancloud.ir/redis:latest"
    ports:
      - "6381:6379"
    volumes:
      - redis_1_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    networks:
      redis_cluster_network:
        ipv4_address: 174.10.0.2
    deploy:
      placement:
        constraints:
          - node.hostname == node1  # Place on Node 1

  redis_2:
    image: "docker.arvancloud.ir/redis:latest"
    ports:
      - "6382:6379"
    volumes:
      - redis_2_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    networks:
      redis_cluster_network:
        ipv4_address: 174.10.0.3
    deploy:
      placement:
        constraints:
          - node.hostname == node1  # Place on Node 1, same as redis_1 (master)

  redis_3:
    image: "docker.arvancloud.ir/redis:latest"
    ports:
      - "6383:6379"
    volumes:
      - redis_3_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    networks:
      redis_cluster_network:
        ipv4_address: 174.10.0.4
    deploy:
      placement:
        constraints:
          - node.hostname == node2  # Place on Node 2

  redis_4:
    image: "docker.arvancloud.ir/redis:latest"
    ports:
      - "6384:6379"
    volumes:
      - redis_4_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    networks:
      redis_cluster_network:
        ipv4_address: 174.10.0.5
    deploy:
      placement:
        constraints:
          - node.hostname == node2  # Place on Node 2, same as redis_3 (master)

  redis_5:
    image: "docker.arvancloud.ir/redis:latest"
    ports:
      - "6385:6379"
    volumes:
      - redis_5_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    networks:
      redis_cluster_network:
        ipv4_address: 174.10.0.6
    deploy:
      placement:
        constraints:
          - node.hostname == node3  # Place on Node 3

  redis_6:
    image: "docker.arvancloud.ir/redis:latest"
    ports:
      - "6386:6379"
    volumes:
      - redis_6_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    networks:
      redis_cluster_network:
        ipv4_address: 174.10.0.7
    deploy:
      placement:
        constraints:
          - node.hostname == node3  # Place on Node 3, same as redis_5 (master)

  cluster_initiator:
    image: redis-cluster-initiator:latest
    tty: true
    depends_on:
      - redis_1
      - redis_2
      - redis_3
      - redis_4
      - redis_5
      - redis_6
    deploy:
      restart_policy:
        condition: none  # Do not restart after the task completes

      placement:
        constraints:
          - node.hostname == node1  # Place on Node 3, same as redis_5 (master)
    networks:
      redis_cluster_network:
        ipv4_address: 174.10.0.8

  redis_commander:
    image: docker.arvancloud.ir/rediscommander/redis-commander:latest
    environment:
      REDIS_HOSTS: "local:redis_1:6379,local:redis_2:6379,local:redis_3:6379,local:redis_4:6379,local:redis_5:6379,local:redis_6:6379"
    ports:
      - "5050:8081"
    depends_on:
      - redis_1
      - redis_2
      - redis_3
      - redis_4
      - redis_5
      - redis_6
      - cluster_initiator
    deploy:
      placement:
        constraints:
          - node.hostname == node1  # Place on Node 3, same as redis_5 (master)

    networks:
      redis_cluster_network:
        ipv4_address: 174.10.0.9

networks:
  redis_cluster_network:
    driver: overlay  # Updated to overlay for multi-node communication
    ipam:
      driver: default
      config:
        - subnet: 174.10.0.0/16

volumes:
  redis_1_data: {}
  redis_2_data: {}
  redis_3_data: {}
  redis_4_data: {}
  redis_5_data: {}
  redis_6_data: {}
